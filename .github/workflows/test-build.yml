name: GParted Live customization build script

on: workflow_dispatch
  
  #schedule:
    # * is a special character in YAML so you have to quote this string
    #- cron:  '10 00 * * *'

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install prerequisites
      run: |
        set -xe
        
        #sudo apt -y -qq -o=Dpkg::Use-Pty=0 update ; sudo apt -y -qq -o=Dpkg::Use-Pty=0 upgrade ; sudo apt -y -qq -o=Dpkg::Use-Pty=0 install squashfs-tools isolinux xorriso unzip zip
        sudo apt -y -qq -o=Dpkg::Use-Pty=0 install squashfs-tools isolinux xorriso unzip zip
        
    - name: Get GParted Live zip
      run: |
        set -xe
        
        ROOT_DIR="/tmp"
        echo "ROOT_DIR=$ROOT_DIR" >> $GITHUB_ENV
        
        cd $ROOT_DIR
        ls -al $ROOT_DIR
        
        GPARTED_BASE_ZIP_URL="https://freefr.dl.sourceforge.net/project/gparted/gparted-live-stable/1.5.0-6/gparted-live-1.5.0-6-amd64.zip"
        GPARTED_BASE_FULL_FNAME=$(basename $GPARTED_BASE_ZIP_URL)
        GPARTED_BASE_NAME=$(basename $GPARTED_BASE_FULL_FNAME .zip)
        
        time wget -nv "$GPARTED_BASE_ZIP_URL"
        GPARTED_BASE_FPATH=$(realpath $GPARTED_BASE_FULL_FNAME)
        
        echo "GPARTED_BASE_ZIP_URL=$GPARTED_BASE_ZIP_URL" >> $GITHUB_ENV
        echo "GPARTED_BASE_FULL_FNAME=$GPARTED_BASE_FULL_FNAME" >> $GITHUB_ENV
        echo "GPARTED_BASE_NAME=$GPARTED_BASE_NAME" >> $GITHUB_ENV
        echo "GPARTED_BASE_FPATH=$GPARTED_BASE_FPATH" >> $GITHUB_ENV

        ISO_OUT_FILE_NAME="$GPARTED_BASE_NAME-maaaaz-edition-$(date '+%Y%m%d').iso"
        echo "ISO_OUT_FILE_NAME=$ISO_OUT_FILE_NAME" >> $GITHUB_ENV
        
        #time wget -nv https://freefr.dl.sourceforge.net/project/gparted/gparted-live-stable/1.4.0-5/gparted-live-1.4.0-5-amd64.zip
        #time wget -nv https://altushost-swe.dl.sourceforge.net/project/gparted/gparted-live-stable/1.4.0-5/gparted-live-1.4.0-5-amd64.zip

      shell: bash
    
    - name: Prepare custom env
      run: |
        set -xe

        cd $ROOT_DIR
        
        ZIP_TMP="$ROOT_DIR/zip-tmp"
        echo "ZIP_TMP=$ZIP_TMP" >> $GITHUB_ENV
        
        SQUASHFS_TMP="$ROOT_DIR/squashfs-tmp"
        echo "SQUASHFS_TMP=$SQUASHFS_TMP" >> $GITHUB_ENV
        
        mkdir "$ZIP_TMP" "$SQUASHFS_TMP"
        
        #ls -al "$ZIP_TMP"
        #ls -al "SQUASHFS_TMP"

        
        unzip -q $GPARTED_BASE_FPATH -d $ZIP_TMP
        #unzip -q gparted-live-1.4.0-5-amd64.zip -d ~/zip-tmp

        cp $ZIP_TMP/live/filesystem.squashfs $SQUASHFS_TMP
        #cp ~/zip-tmp/live/filesystem.squashfs ~/squashfs-tmp
        
        cd $SQUASHFS_TMP && sudo unsquashfs filesystem.squashfs

        SQUASHFS_ROOT=$(realpath ./squashfs-root)
        echo "SQUASHFS_ROOT=$SQUASHFS_ROOT" >> $GITHUB_ENV
        
        sudo mount --bind /proc $SQUASHFS_ROOT/proc/
        sudo mount --bind /sys $SQUASHFS_ROOT/sys/
        sudo mount --bind /dev $SQUASHFS_ROOT/dev/
        sudo mount --bind /dev/pts $SQUASHFS_ROOT/dev/pts/
        
      shell: bash
    
    - name: Customize env
      run: |
        set -xe
        
        ls -al $SQUASHFS_TMP
        cd $SQUASHFS_TMP
        echo nameserver 8.8.8.8| sudo tee $SQUASHFS_ROOT/etc/resolv.conf

        sudo --preserve-env chroot $SQUASHFS_ROOT/ apt -y update
        #sudo --preserve-env chroot $SQUASHFS_ROOT/ apt -y -qq update

        DEBIAN_FRONTEND=noninteractive sudo --preserve-env chroot $SQUASHFS_ROOT/ apt -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" full-upgrade
        DEBIAN_FRONTEND=noninteractive sudo --preserve-env chroot $SQUASHFS_ROOT/ apt -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install $(cat $GITHUB_WORKSPACE/_resources/packages_to_add.txt)
        DEBIAN_FRONTEND=noninteractive sudo --preserve-env chroot $SQUASHFS_ROOT/ apt -y autoremove --purge
        DEBIAN_FRONTEND=noninteractive sudo --preserve-env chroot $SQUASHFS_ROOT/ apt -y clean
        DEBIAN_FRONTEND=noninteractive sudo --preserve-env chroot $SQUASHFS_ROOT/ apt -y autoclean
        
        #DEBIAN_FRONTEND=noninteractive sudo --preserve-env chroot squashfs-root/ apt -y -qq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install wget mlocate git kbd vim strace ltrace git net-tools lsof python3-pip dkms make bzip2 curl dnsutils openssh-server openssh-client bmon nmon htop gzip coreutils dos2unix util-linux iptables jq less nmap parallel sed grep sqlite3 ftp tzdata vlan python3-virtualenv virtualenvwrapper libpq-dev libpcap-dev libssl-dev python3 python3-dev xxd colordiff findutils zutils nfs-common ntfs-3g pigz xrdp cifs-utils smbclient openssl pv subversion tar telnet tcpdump tshark traceroute vbindiff usbutils whois xz-utils rclone
        #DEBIAN_FRONTEND=noninteractive sudo --preserve-env chroot squashfs-root/ apt -y -qq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" full-upgrade
        #DEBIAN_FRONTEND=noninteractive sudo --preserve-env chroot squashfs-root/ apt -y -qq autoremove --purge
        #DEBIAN_FRONTEND=noninteractive sudo --preserve-env chroot squashfs-root/ apt -y -qq clean
        #DEBIAN_FRONTEND=noninteractive sudo --preserve-env chroot squashfs-root/ apt -y -qq autoclean

               
        sudo --preserve-env chroot $SQUASHFS_ROOT/ dpkg --get-selections > ~/zip-tmp/live/filesystem.packages
        
        sudo --preserve-env chroot $SQUASHFS_ROOT/ systemctl stop rpcbind.socket
        sudo --preserve-env chroot $SQUASHFS_ROOT/ systemctl mask rpcbind.socket
        
        sudo --preserve-env chroot $SQUASHFS_ROOT/ systemctl stop rpcbind
        sudo --preserve-env chroot $SQUASHFS_ROOT/ systemctl mask rpcbind
        
        sudo --preserve-env chroot $SQUASHFS_ROOT/ systemctl stop xrdp
        sudo --preserve-env chroot $SQUASHFS_ROOT/ systemctl mask xrdp
        
        sudo --preserve-env chroot $SQUASHFS_ROOT/ systemctl stop systemd-resolved.service
        sudo --preserve-env chroot $SQUASHFS_ROOT/ systemctl mask systemd-resolved.service

        sudo --preserve-env chroot $SQUASHFS_ROOT/ systemctl stop tftpd-hpa.service
        sudo --preserve-env chroot $SQUASHFS_ROOT/ systemctl mask tftpd-hpa.service
        
        sudo rm -f $SQUASHFS_ROOT/etc/resolv.conf
  
      shell: bash
    
    - name: Unprep the custom env
      run: |
        set -xe
        
        cd $SQUASHFS_TMP
        
        echo "[+] findmnt before unmount"
        findmnt
        echo
        sudo umount $SQUASHFS_ROOT/proc/
        sudo umount $SQUASHFS_ROOT/sys/
        sudo umount $SQUASHFS_ROOT/dev/pts/
        sudo umount $SQUASHFS_ROOT/dev/
        
        echo "[+] findmnt after unmount"
        findmnt
        echo
                
      shell: bash
    
    - name: Build custom ISO
      run: |
        set -xe
        
        sudo cp -f $GITHUB_WORKSPACE/_resources/Gsplash.png $ZIP_TMP/syslinux/Gsplash.png
        sudo cp -f $GITHUB_WORKSPACE/_resources/Gsplash.png $ZIP_TMP/boot/grub/Gsplash.png
                
        cd $SQUASHFS_TMP
        sudo mksquashfs $SQUASHFS_ROOT filesystem.squashfs.new -b 1024k -comp xz -Xbcj x86 -e boot
        sudo cp filesystem.squashfs.new $ZIP_TMP/live/filesystem.squashfs
        
        sudo find $ZIP_TMP -type f -exec sha256sum {} \; 1>/tmp/sha256sum.txt
        sudo cp -f /tmp/sha256sum.txt $ZIP_TMP/sha256sum.txt
        
        cd $ZIP_TMP && sudo zip -r ../gparted-live.new.zip ./*
        xorriso -as mkisofs -R -r -J -joliet-long -l -cache-inodes -iso-level 3 -isohybrid-mbr /usr/lib/ISOLINUX/isohdpfx.bin -partition_offset 16 -A 'GParted live CD' -b syslinux/isolinux.bin -c syslinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot --efi-boot boot/grub/efi.img -isohybrid-gpt-basdat -isohybrid-apm-hfsplus ./ > "$ISO_OUT_FILE_NAME"
        ls -al $ISO_OUT_FILE_NAME
        
      shell: bash
