name: GParted Live customization build script

on: [push]
  
  #schedule:
    # * is a special character in YAML so you have to quote this string
    #- cron:  '10 00 * * *'

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install prerequisites
      run: |
        #sudo apt -y -qq -o=Dpkg::Use-Pty=0 update ; sudo apt -y -qq -o=Dpkg::Use-Pty=0 upgrade ; sudo apt -y -qq -o=Dpkg::Use-Pty=0 install squashfs-tools isolinux xorriso unzip zip
        sudo apt -y -qq -o=Dpkg::Use-Pty=0 install squashfs-tools isolinux xorriso unzip zip
        
    - name: Get GParted live zip
      run: |
        set -xe
        
        time wget -nv https://freefr.dl.sourceforge.net/project/gparted/gparted-live-stable/1.4.0-5/gparted-live-1.4.0-5-amd64.zip
      shell: bash
    
    - name: Prepare custom env
      run: |
        set -xe
        
        mkdir ~/zip-tmp ~/squashfs-tmp
        unzip -q gparted-live-1.4.0-5-amd64.zip -d ~/zip-tmp
        cp ~/zip-tmp/live/filesystem.squashfs ~/squashfs-tmp
        cd ~/squashfs-tmp; sudo unsquashfs filesystem.squashfs
        
        sudo mount --bind /proc squashfs-root/proc/
        sudo mount --bind /sys squashfs-root/sys/
        sudo mount --bind /dev squashfs-root/dev/
      shell: bash
    
    - name: Get GParted Live zip and customize it
      run: |
        set -xe
        
        ls -al ~/squashfs-tmp;
        cd ~/squashfs-tmp;
        echo nameserver 8.8.8.8| sudo tee squashfs-root/etc/resolv.conf
        
        #sudo "echo 'nameserver 8.8.8.8' > squashfs-root/etc/resolv.conf"
        #sudo --preserve-env chroot squashfs-root/ "echo 'nameserver 8.8.8.8' > squashfs-root/etc/resolv.conf"
        #sudo --preserve-env chroot squashfs-root/ "echo 'nameserver 8.8.8.8'"
        
        sudo --preserve-env chroot squashfs-root/ apt -y -qq update
        #sudo --preserve-env chroot squashfs-root/ apt -y -qq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade
        sudo --preserve-env chroot squashfs-root/ apt -y -qq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install wget mlocate git kbd vim strace ltrace git net-tools lsof python3-pip dkms make bzip2 curl dnsutils openssh-server openssh-client bmon nmon htop gzip coreutils dos2unix util-linux iptables jq less nmap parallel sed grep sqlite3 ftp tzdata vlan python3-virtualenv virtualenvwrapper libpq-dev libpcap-dev libssl-dev python3 python3-dev xxd colordiff findutils zutils nfs-common ntfs-3g pigz xrdp cifs-utils smbclient openssl pv subversion tar telnet tcpdump tshark traceroute vbindiff usbutils whois xz-utils
  
      shell: bash
    
    - name: Unprep the custom env
      run: |
        set -xe
        
        #sudo --preserve-env chroot squashfs-root/ umount -lf squashfs-root/{proc/,dev/,sys/}
        sudo --preserve-env chroot squashfs-root/ umount -lf /{proc/,dev/,sys/}
        sudo umount -lf /{proc,dev,sys}
      shell: bash
      continue-on-error: true
    
    - name: Build custom ISO
      run: |
        set -xe
        
        cd ~/squashfs-tmp
        sudo mksquashfs squashfs-root filesystem.squashfs.new -b 1024k -comp xz -Xbcj x86 -e boot
        sudo cp filesystem.squashfs.new ~/zip-tmp/live/filesystem.squashfs
        
        cd ~/zip-tmp ; sudo zip -r ../gparted-live.new.zip ./*
        xorriso -as mkisofs -R -r -J -joliet-long -l -cache-inodes -iso-level 3 -isohybrid-mbr /usr/lib/ISOLINUX/isohdpfx.bin -partition_offset 16 -A 'GParted live CD' -b syslinux/isolinux.bin -c syslinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot --efi-boot boot/grub/efi.img -isohybrid-gpt-basdat -isohybrid-apm-hfsplus ./ > /tmp/gparted-live.iso
      shell: bash
